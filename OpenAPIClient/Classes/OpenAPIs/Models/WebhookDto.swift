//
// WebhookDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Representation of a webhook for an inbox. The URL specified will be using by MailSlurp whenever an email is received by the attached inbox. */
public struct WebhookDto: Codable {

    public enum Method: String, Codable, CaseIterable {
        case _get = "GET"
        case head = "HEAD"
        case post = "POST"
        case put = "PUT"
        case patch = "PATCH"
        case delete = "DELETE"
        case options = "OPTIONS"
        case trace = "TRACE"
    }
    /** Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself. */
    public var basicAuth: Bool?
    /** When the webhook was created */
    public var createdAt: Date?
    /** ID of the Webhook */
    public var id: UUID?
    /** The inbox that the Webhook will be triggered by */
    public var inboxId: UUID?
    /** HTTP method that your server endpoint must listen for */
    public var method: Method?
    /** Name of the webhook */
    public var name: String?
    /** JSON Schema for the payload that will be sent to your URL via the HTTP method described. */
    public var payloadJsonSchema: String?
    public var updatedAt: Date
    /** URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema. */
    public var url: String?

    public init(basicAuth: Bool? = nil, createdAt: Date? = nil, id: UUID? = nil, inboxId: UUID? = nil, method: Method? = nil, name: String? = nil, payloadJsonSchema: String? = nil, updatedAt: Date, url: String? = nil) {
        self.basicAuth = basicAuth
        self.createdAt = createdAt
        self.id = id
        self.inboxId = inboxId
        self.method = method
        self.name = name
        self.payloadJsonSchema = payloadJsonSchema
        self.updatedAt = updatedAt
        self.url = url
    }

}

